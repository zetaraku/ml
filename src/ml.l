%{
	#include <stdbool.h>
	#include <assert.h>
	#include "../gen/ml.tab.h"		// generated by bison from ml.y
%}

%option noyywrap

separator	[ \t\n\r]

%%

[A-Za-z][A-Za-z0-9\-]*	{
	strcpy(yylval.strval, yytext);
	return ID;
}

[#][A-Za-z0-9\-]*	{
	if (strcmp(yytext, "#t") == 0) {
		yylval.boolval = true;
		return BOOLLIT;
	} else if (strcmp(yytext, "#f") == 0) {
		yylval.boolval = false;
		return BOOLLIT;
	} else {
		strcpy(yylval.strval, yytext);
		return ID;
	}
}

[\+\-\*\/\>\<\=]	{
	strcpy(yylval.strval, yytext);
	return ID;
}

[\+\-]?(0|[1-9][0-9]*)	{
	yylval.numval = atoi(yytext);
	return NUMLIT;
}

";".*	{
	;					// comments
}

"("|")"	{
	return yytext[0];	// parentheses
}

{separator}	{
	;					// spaces
}

.	{
	assert(false && "invalid token");	// other tokens
}
